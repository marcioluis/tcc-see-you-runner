//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18010
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace SeeYouTest.WindowsPhoneService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/WindowsPhoneService")]
    public partial class CompositeType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool BoolValueField;
        
        private string StringValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WindowsPhoneService.IWindowsPhoneService")]
    public interface IWindowsPhoneService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWindowsPhoneService/GetData", ReplyAction="http://tempuri.org/IWindowsPhoneService/GetDataResponse")]
        System.IAsyncResult BeginGetData(int value, System.AsyncCallback callback, object asyncState);
        
        string EndGetData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWindowsPhoneService/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IWindowsPhoneService/GetDataUsingDataContractResponse")]
        System.IAsyncResult BeginGetDataUsingDataContract(SeeYouTest.WindowsPhoneService.CompositeType composite, System.AsyncCallback callback, object asyncState);
        
        SeeYouTest.WindowsPhoneService.CompositeType EndGetDataUsingDataContract(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWindowsPhoneService/NovoPercurso", ReplyAction="http://tempuri.org/IWindowsPhoneService/NovoPercursoResponse")]
        System.IAsyncResult BeginNovoPercurso(int idUser, string isMetrico, System.AsyncCallback callback, object asyncState);
        
        int EndNovoPercurso(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWindowsPhoneService/AtualizaPercurso", ReplyAction="http://tempuri.org/IWindowsPhoneService/AtualizaPercursoResponse")]
        System.IAsyncResult BeginAtualizaPercurso(int id, int idUser, string descr, System.DateTime data, double velocidadeMedia, double velocidadeMaxima, double distancia, double ritimo, double altitudeMaxima, double altitudeMinima, double altitudeVariacao, double calorias, string duracao, System.AsyncCallback callback, object asyncState);
        
        void EndAtualizaPercurso(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWindowsPhoneService/AddPontos", ReplyAction="http://tempuri.org/IWindowsPhoneService/AddPontosResponse")]
        System.IAsyncResult BeginAddPontos(int id, System.DateTime data, double velocidade, double distancia, double ritimo, double altitude, double calorias, int duracao, string longitude, string latitude, string isMetrico, System.AsyncCallback callback, object asyncState);
        
        void EndAddPontos(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWindowsPhoneServiceChannel : SeeYouTest.WindowsPhoneService.IWindowsPhoneService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDataUsingDataContractCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDataUsingDataContractCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SeeYouTest.WindowsPhoneService.CompositeType Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SeeYouTest.WindowsPhoneService.CompositeType)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NovoPercursoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public NovoPercursoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WindowsPhoneServiceClient : System.ServiceModel.ClientBase<SeeYouTest.WindowsPhoneService.IWindowsPhoneService>, SeeYouTest.WindowsPhoneService.IWindowsPhoneService {
        
        private BeginOperationDelegate onBeginGetDataDelegate;
        
        private EndOperationDelegate onEndGetDataDelegate;
        
        private System.Threading.SendOrPostCallback onGetDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDataUsingDataContractDelegate;
        
        private EndOperationDelegate onEndGetDataUsingDataContractDelegate;
        
        private System.Threading.SendOrPostCallback onGetDataUsingDataContractCompletedDelegate;
        
        private BeginOperationDelegate onBeginNovoPercursoDelegate;
        
        private EndOperationDelegate onEndNovoPercursoDelegate;
        
        private System.Threading.SendOrPostCallback onNovoPercursoCompletedDelegate;
        
        private BeginOperationDelegate onBeginAtualizaPercursoDelegate;
        
        private EndOperationDelegate onEndAtualizaPercursoDelegate;
        
        private System.Threading.SendOrPostCallback onAtualizaPercursoCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddPontosDelegate;
        
        private EndOperationDelegate onEndAddPontosDelegate;
        
        private System.Threading.SendOrPostCallback onAddPontosCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public WindowsPhoneServiceClient() {
        }
        
        public WindowsPhoneServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WindowsPhoneServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WindowsPhoneServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WindowsPhoneServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetDataCompletedEventArgs> GetDataCompleted;
        
        public event System.EventHandler<GetDataUsingDataContractCompletedEventArgs> GetDataUsingDataContractCompleted;
        
        public event System.EventHandler<NovoPercursoCompletedEventArgs> NovoPercursoCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AtualizaPercursoCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddPontosCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SeeYouTest.WindowsPhoneService.IWindowsPhoneService.BeginGetData(int value, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetData(value, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string SeeYouTest.WindowsPhoneService.IWindowsPhoneService.EndGetData(System.IAsyncResult result) {
            return base.Channel.EndGetData(result);
        }
        
        private System.IAsyncResult OnBeginGetData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int value = ((int)(inValues[0]));
            return ((SeeYouTest.WindowsPhoneService.IWindowsPhoneService)(this)).BeginGetData(value, callback, asyncState);
        }
        
        private object[] OnEndGetData(System.IAsyncResult result) {
            string retVal = ((SeeYouTest.WindowsPhoneService.IWindowsPhoneService)(this)).EndGetData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDataCompleted(object state) {
            if ((this.GetDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDataCompleted(this, new GetDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDataAsync(int value) {
            this.GetDataAsync(value, null);
        }
        
        public void GetDataAsync(int value, object userState) {
            if ((this.onBeginGetDataDelegate == null)) {
                this.onBeginGetDataDelegate = new BeginOperationDelegate(this.OnBeginGetData);
            }
            if ((this.onEndGetDataDelegate == null)) {
                this.onEndGetDataDelegate = new EndOperationDelegate(this.OnEndGetData);
            }
            if ((this.onGetDataCompletedDelegate == null)) {
                this.onGetDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDataCompleted);
            }
            base.InvokeAsync(this.onBeginGetDataDelegate, new object[] {
                        value}, this.onEndGetDataDelegate, this.onGetDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SeeYouTest.WindowsPhoneService.IWindowsPhoneService.BeginGetDataUsingDataContract(SeeYouTest.WindowsPhoneService.CompositeType composite, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDataUsingDataContract(composite, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SeeYouTest.WindowsPhoneService.CompositeType SeeYouTest.WindowsPhoneService.IWindowsPhoneService.EndGetDataUsingDataContract(System.IAsyncResult result) {
            return base.Channel.EndGetDataUsingDataContract(result);
        }
        
        private System.IAsyncResult OnBeginGetDataUsingDataContract(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SeeYouTest.WindowsPhoneService.CompositeType composite = ((SeeYouTest.WindowsPhoneService.CompositeType)(inValues[0]));
            return ((SeeYouTest.WindowsPhoneService.IWindowsPhoneService)(this)).BeginGetDataUsingDataContract(composite, callback, asyncState);
        }
        
        private object[] OnEndGetDataUsingDataContract(System.IAsyncResult result) {
            SeeYouTest.WindowsPhoneService.CompositeType retVal = ((SeeYouTest.WindowsPhoneService.IWindowsPhoneService)(this)).EndGetDataUsingDataContract(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDataUsingDataContractCompleted(object state) {
            if ((this.GetDataUsingDataContractCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDataUsingDataContractCompleted(this, new GetDataUsingDataContractCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDataUsingDataContractAsync(SeeYouTest.WindowsPhoneService.CompositeType composite) {
            this.GetDataUsingDataContractAsync(composite, null);
        }
        
        public void GetDataUsingDataContractAsync(SeeYouTest.WindowsPhoneService.CompositeType composite, object userState) {
            if ((this.onBeginGetDataUsingDataContractDelegate == null)) {
                this.onBeginGetDataUsingDataContractDelegate = new BeginOperationDelegate(this.OnBeginGetDataUsingDataContract);
            }
            if ((this.onEndGetDataUsingDataContractDelegate == null)) {
                this.onEndGetDataUsingDataContractDelegate = new EndOperationDelegate(this.OnEndGetDataUsingDataContract);
            }
            if ((this.onGetDataUsingDataContractCompletedDelegate == null)) {
                this.onGetDataUsingDataContractCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDataUsingDataContractCompleted);
            }
            base.InvokeAsync(this.onBeginGetDataUsingDataContractDelegate, new object[] {
                        composite}, this.onEndGetDataUsingDataContractDelegate, this.onGetDataUsingDataContractCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SeeYouTest.WindowsPhoneService.IWindowsPhoneService.BeginNovoPercurso(int idUser, string isMetrico, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginNovoPercurso(idUser, isMetrico, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int SeeYouTest.WindowsPhoneService.IWindowsPhoneService.EndNovoPercurso(System.IAsyncResult result) {
            return base.Channel.EndNovoPercurso(result);
        }
        
        private System.IAsyncResult OnBeginNovoPercurso(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int idUser = ((int)(inValues[0]));
            string isMetrico = ((string)(inValues[1]));
            return ((SeeYouTest.WindowsPhoneService.IWindowsPhoneService)(this)).BeginNovoPercurso(idUser, isMetrico, callback, asyncState);
        }
        
        private object[] OnEndNovoPercurso(System.IAsyncResult result) {
            int retVal = ((SeeYouTest.WindowsPhoneService.IWindowsPhoneService)(this)).EndNovoPercurso(result);
            return new object[] {
                    retVal};
        }
        
        private void OnNovoPercursoCompleted(object state) {
            if ((this.NovoPercursoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.NovoPercursoCompleted(this, new NovoPercursoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void NovoPercursoAsync(int idUser, string isMetrico) {
            this.NovoPercursoAsync(idUser, isMetrico, null);
        }
        
        public void NovoPercursoAsync(int idUser, string isMetrico, object userState) {
            if ((this.onBeginNovoPercursoDelegate == null)) {
                this.onBeginNovoPercursoDelegate = new BeginOperationDelegate(this.OnBeginNovoPercurso);
            }
            if ((this.onEndNovoPercursoDelegate == null)) {
                this.onEndNovoPercursoDelegate = new EndOperationDelegate(this.OnEndNovoPercurso);
            }
            if ((this.onNovoPercursoCompletedDelegate == null)) {
                this.onNovoPercursoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnNovoPercursoCompleted);
            }
            base.InvokeAsync(this.onBeginNovoPercursoDelegate, new object[] {
                        idUser,
                        isMetrico}, this.onEndNovoPercursoDelegate, this.onNovoPercursoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SeeYouTest.WindowsPhoneService.IWindowsPhoneService.BeginAtualizaPercurso(int id, int idUser, string descr, System.DateTime data, double velocidadeMedia, double velocidadeMaxima, double distancia, double ritimo, double altitudeMaxima, double altitudeMinima, double altitudeVariacao, double calorias, string duracao, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAtualizaPercurso(id, idUser, descr, data, velocidadeMedia, velocidadeMaxima, distancia, ritimo, altitudeMaxima, altitudeMinima, altitudeVariacao, calorias, duracao, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void SeeYouTest.WindowsPhoneService.IWindowsPhoneService.EndAtualizaPercurso(System.IAsyncResult result) {
            base.Channel.EndAtualizaPercurso(result);
        }
        
        private System.IAsyncResult OnBeginAtualizaPercurso(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            int idUser = ((int)(inValues[1]));
            string descr = ((string)(inValues[2]));
            System.DateTime data = ((System.DateTime)(inValues[3]));
            double velocidadeMedia = ((double)(inValues[4]));
            double velocidadeMaxima = ((double)(inValues[5]));
            double distancia = ((double)(inValues[6]));
            double ritimo = ((double)(inValues[7]));
            double altitudeMaxima = ((double)(inValues[8]));
            double altitudeMinima = ((double)(inValues[9]));
            double altitudeVariacao = ((double)(inValues[10]));
            double calorias = ((double)(inValues[11]));
            string duracao = ((string)(inValues[12]));
            return ((SeeYouTest.WindowsPhoneService.IWindowsPhoneService)(this)).BeginAtualizaPercurso(id, idUser, descr, data, velocidadeMedia, velocidadeMaxima, distancia, ritimo, altitudeMaxima, altitudeMinima, altitudeVariacao, calorias, duracao, callback, asyncState);
        }
        
        private object[] OnEndAtualizaPercurso(System.IAsyncResult result) {
            ((SeeYouTest.WindowsPhoneService.IWindowsPhoneService)(this)).EndAtualizaPercurso(result);
            return null;
        }
        
        private void OnAtualizaPercursoCompleted(object state) {
            if ((this.AtualizaPercursoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AtualizaPercursoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AtualizaPercursoAsync(int id, int idUser, string descr, System.DateTime data, double velocidadeMedia, double velocidadeMaxima, double distancia, double ritimo, double altitudeMaxima, double altitudeMinima, double altitudeVariacao, double calorias, string duracao) {
            this.AtualizaPercursoAsync(id, idUser, descr, data, velocidadeMedia, velocidadeMaxima, distancia, ritimo, altitudeMaxima, altitudeMinima, altitudeVariacao, calorias, duracao, null);
        }
        
        public void AtualizaPercursoAsync(int id, int idUser, string descr, System.DateTime data, double velocidadeMedia, double velocidadeMaxima, double distancia, double ritimo, double altitudeMaxima, double altitudeMinima, double altitudeVariacao, double calorias, string duracao, object userState) {
            if ((this.onBeginAtualizaPercursoDelegate == null)) {
                this.onBeginAtualizaPercursoDelegate = new BeginOperationDelegate(this.OnBeginAtualizaPercurso);
            }
            if ((this.onEndAtualizaPercursoDelegate == null)) {
                this.onEndAtualizaPercursoDelegate = new EndOperationDelegate(this.OnEndAtualizaPercurso);
            }
            if ((this.onAtualizaPercursoCompletedDelegate == null)) {
                this.onAtualizaPercursoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAtualizaPercursoCompleted);
            }
            base.InvokeAsync(this.onBeginAtualizaPercursoDelegate, new object[] {
                        id,
                        idUser,
                        descr,
                        data,
                        velocidadeMedia,
                        velocidadeMaxima,
                        distancia,
                        ritimo,
                        altitudeMaxima,
                        altitudeMinima,
                        altitudeVariacao,
                        calorias,
                        duracao}, this.onEndAtualizaPercursoDelegate, this.onAtualizaPercursoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SeeYouTest.WindowsPhoneService.IWindowsPhoneService.BeginAddPontos(int id, System.DateTime data, double velocidade, double distancia, double ritimo, double altitude, double calorias, int duracao, string longitude, string latitude, string isMetrico, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddPontos(id, data, velocidade, distancia, ritimo, altitude, calorias, duracao, longitude, latitude, isMetrico, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void SeeYouTest.WindowsPhoneService.IWindowsPhoneService.EndAddPontos(System.IAsyncResult result) {
            base.Channel.EndAddPontos(result);
        }
        
        private System.IAsyncResult OnBeginAddPontos(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            System.DateTime data = ((System.DateTime)(inValues[1]));
            double velocidade = ((double)(inValues[2]));
            double distancia = ((double)(inValues[3]));
            double ritimo = ((double)(inValues[4]));
            double altitude = ((double)(inValues[5]));
            double calorias = ((double)(inValues[6]));
            int duracao = ((int)(inValues[7]));
            string longitude = ((string)(inValues[8]));
            string latitude = ((string)(inValues[9]));
            string isMetrico = ((string)(inValues[10]));
            return ((SeeYouTest.WindowsPhoneService.IWindowsPhoneService)(this)).BeginAddPontos(id, data, velocidade, distancia, ritimo, altitude, calorias, duracao, longitude, latitude, isMetrico, callback, asyncState);
        }
        
        private object[] OnEndAddPontos(System.IAsyncResult result) {
            ((SeeYouTest.WindowsPhoneService.IWindowsPhoneService)(this)).EndAddPontos(result);
            return null;
        }
        
        private void OnAddPontosCompleted(object state) {
            if ((this.AddPontosCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddPontosCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddPontosAsync(int id, System.DateTime data, double velocidade, double distancia, double ritimo, double altitude, double calorias, int duracao, string longitude, string latitude, string isMetrico) {
            this.AddPontosAsync(id, data, velocidade, distancia, ritimo, altitude, calorias, duracao, longitude, latitude, isMetrico, null);
        }
        
        public void AddPontosAsync(int id, System.DateTime data, double velocidade, double distancia, double ritimo, double altitude, double calorias, int duracao, string longitude, string latitude, string isMetrico, object userState) {
            if ((this.onBeginAddPontosDelegate == null)) {
                this.onBeginAddPontosDelegate = new BeginOperationDelegate(this.OnBeginAddPontos);
            }
            if ((this.onEndAddPontosDelegate == null)) {
                this.onEndAddPontosDelegate = new EndOperationDelegate(this.OnEndAddPontos);
            }
            if ((this.onAddPontosCompletedDelegate == null)) {
                this.onAddPontosCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddPontosCompleted);
            }
            base.InvokeAsync(this.onBeginAddPontosDelegate, new object[] {
                        id,
                        data,
                        velocidade,
                        distancia,
                        ritimo,
                        altitude,
                        calorias,
                        duracao,
                        longitude,
                        latitude,
                        isMetrico}, this.onEndAddPontosDelegate, this.onAddPontosCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override SeeYouTest.WindowsPhoneService.IWindowsPhoneService CreateChannel() {
            return new WindowsPhoneServiceClientChannel(this);
        }
        
        private class WindowsPhoneServiceClientChannel : ChannelBase<SeeYouTest.WindowsPhoneService.IWindowsPhoneService>, SeeYouTest.WindowsPhoneService.IWindowsPhoneService {
            
            public WindowsPhoneServiceClientChannel(System.ServiceModel.ClientBase<SeeYouTest.WindowsPhoneService.IWindowsPhoneService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetData(int value, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = value;
                System.IAsyncResult _result = base.BeginInvoke("GetData", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetData(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetDataUsingDataContract(SeeYouTest.WindowsPhoneService.CompositeType composite, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = composite;
                System.IAsyncResult _result = base.BeginInvoke("GetDataUsingDataContract", _args, callback, asyncState);
                return _result;
            }
            
            public SeeYouTest.WindowsPhoneService.CompositeType EndGetDataUsingDataContract(System.IAsyncResult result) {
                object[] _args = new object[0];
                SeeYouTest.WindowsPhoneService.CompositeType _result = ((SeeYouTest.WindowsPhoneService.CompositeType)(base.EndInvoke("GetDataUsingDataContract", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginNovoPercurso(int idUser, string isMetrico, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = idUser;
                _args[1] = isMetrico;
                System.IAsyncResult _result = base.BeginInvoke("NovoPercurso", _args, callback, asyncState);
                return _result;
            }
            
            public int EndNovoPercurso(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("NovoPercurso", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAtualizaPercurso(int id, int idUser, string descr, System.DateTime data, double velocidadeMedia, double velocidadeMaxima, double distancia, double ritimo, double altitudeMaxima, double altitudeMinima, double altitudeVariacao, double calorias, string duracao, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[13];
                _args[0] = id;
                _args[1] = idUser;
                _args[2] = descr;
                _args[3] = data;
                _args[4] = velocidadeMedia;
                _args[5] = velocidadeMaxima;
                _args[6] = distancia;
                _args[7] = ritimo;
                _args[8] = altitudeMaxima;
                _args[9] = altitudeMinima;
                _args[10] = altitudeVariacao;
                _args[11] = calorias;
                _args[12] = duracao;
                System.IAsyncResult _result = base.BeginInvoke("AtualizaPercurso", _args, callback, asyncState);
                return _result;
            }
            
            public void EndAtualizaPercurso(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("AtualizaPercurso", _args, result);
            }
            
            public System.IAsyncResult BeginAddPontos(int id, System.DateTime data, double velocidade, double distancia, double ritimo, double altitude, double calorias, int duracao, string longitude, string latitude, string isMetrico, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[11];
                _args[0] = id;
                _args[1] = data;
                _args[2] = velocidade;
                _args[3] = distancia;
                _args[4] = ritimo;
                _args[5] = altitude;
                _args[6] = calorias;
                _args[7] = duracao;
                _args[8] = longitude;
                _args[9] = latitude;
                _args[10] = isMetrico;
                System.IAsyncResult _result = base.BeginInvoke("AddPontos", _args, callback, asyncState);
                return _result;
            }
            
            public void EndAddPontos(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("AddPontos", _args, result);
            }
        }
    }
}
